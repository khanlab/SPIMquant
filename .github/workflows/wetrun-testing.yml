name: SPIMquant PR Wet-Run (Ephemeral Runner)

on:
  workflow_dispatch:
  pull_request:
    types: [labeled]
    # types: [opened, synchronize, reopened]

permissions:
  contents: read
  actions: write
  pull-requests: write

concurrency:
  group: pr-wet-run-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  launch-runner:
    if: >
      (github.event_name == 'pull_request' &&
         github.event.action == 'labeled' &&
         github.event.label.name == 'ready-for-wet-run')
      ||
      (github.event_name == 'workflow_dispatch')
    uses: khanlab/actions/.github/workflows/workflow-pr_task-launchRunner.yml@configurable-server-resources
    with:
      pr_number: ${{ github.event.pull_request.number }}
      repository: ${{ github.repository }}
      server_flavor: c8-60gb-288
    secrets:
      OS_APPLICATION_CREDENTIAL_ID: ${{ secrets.OS_APPLICATION_CREDENTIAL_ID }}
      OS_APPLICATION_CREDENTIAL_SECRET: ${{ secrets.OS_APPLICATION_CREDENTIAL_SECRET }}
      RUNNER_PAT: ${{ secrets.RUNNER_PAT }}

  run-wet-run:
    needs: launch-runner
    strategy:
      matrix:
        runner_label: ["${{ github.event.repository.name }}-pr-${{ github.event.pull_request.number }}"]
    runs-on: [self-hosted, "${{ matrix.runner_label }}"]
    defaults:
      run:
        shell: bash -l {0}
    timeout-minutes: 60  # max 1 hour

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Pixi environment
      uses: prefix-dev/setup-pixi@v0.9.1
      with:
        activate-environment: true

    - name: Run wet run
      run: |
        ./spimquant/run.py $GITHUB_WORKSPACE/tests/bids_ds /mnt/test-out participant --cores all --registration-level 0 --segmentation-level 0

  cleanup:
    needs: [launch-runner, run-wet-run]
    if: always()
    uses: khanlab/actions/.github/workflows/workflow-pr_task-removeRunner.yml@configurable-server-resources
    with:
      pr_number: ${{ github.event.pull_request.number }}
      repository: ${{ github.repository }}
      vm_id: ${{ needs.launch-runner.outputs.vm_id }}
    secrets:
      OS_APPLICATION_CREDENTIAL_ID: ${{ secrets.OS_APPLICATION_CREDENTIAL_ID }}
      OS_APPLICATION_CREDENTIAL_SECRET: ${{ secrets.OS_APPLICATION_CREDENTIAL_SECRET }}
      RUNNER_PAT: ${{ secrets.RUNNER_PAT }}