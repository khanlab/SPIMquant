#list of analysis levels in the bids app
analysis_levels: &analysis_levels
 - participant

#mapping from analysis_level to set of target rules or files
targets_by_analysis_level:
  participant:
    - ''  # if '', then the first rule is run

# Configure components:
# Each entry creates a new component that can be retreived within the workflow
# via `generate_inputs`.
# Filters are used to select paths: each filter has an `entity` key and a
# single value or list of values to select.
# Wildcards are used to mark variable parts of paths. Each wildcard is an
# entity, such as `subject` or `session`, that may vary across component paths.
pybids_inputs:
  spim:
    filters:
      suffix: 'SPIM'
      extension: 'ome.zarr'
      sample: brain
    wildcards:
      - subject
      - sample
      - acquisition
      - staining
  T2w:
    filters:
      suffix: 'T2w'
      extension: 'nii.gz'
      datatype: 'anat'
    wildcards:
      - subject
      - session
      - acquisition


#configuration for the command-line parameters to make available
# passed on the argparse add_argument()
parse_args:
  --work:
    help: "Local path to use for temporary files\n"
    type: str
    default: work

  --template:
    help: "Template to use for SPIM registration\n"
    default: ABAv3
    choices: 
     - ABAv3
     - DSURQE
     - gubra
     - MBMv3
     - turone

  --template_mri:
    help: "Template to use for MRI registration to obtain brain mask\n"
    default: MouseIn
    choices:
      - MouseIn
      - DSURQE
      - MBMv3
      - turone

  --atlas_segs:
    help: "Atlas segmentations to use with the chosen template (default: use them all)"
    default: null
    action: store
    nargs: '+'



  --template_negative_mask:
    help: "Negative mask, in the template space, to highlight regions to avoid\n"
    type: Path
    default: placeholder

  --template_crop:
    help: "Crop template along X-axis to retain specific hemisphere for registration (default: %(default)s)"
    choices: 
      - left
      - right
    default: null

  --stains_for_reg:
    help: "Possible stains to use for registration (will choose first available, in order)\n (default: %(default)s)"
    default: 
      - PI
      - YOPRO
      - YoPro
      - AutoF
      - autof
    action: store
    nargs: '+'

  --stains_for_seg:
    help: "List of stains to use for segmentation and quantification\n (default: %(default)s)"
    default: 
      - abeta
      - Abeta
      - BetaAmyloid
      - AlphaSynuclein
      - Iba1
      - ChAT
    action: store
    nargs: '+'

  --registration_level:
    help: "Downsampling level to use for registration (level 0 is full res, level 1 is 50% size, ...) (default: %(default)s)"
    default: 5

  --segmentation_level:
    help: "Downsampling level to use for segmentation (level 0 is full res, level 1 is 50% size, ...) (default: %(default)s)"
    default: 0

  --correction_method:
    help: "Method to use for intensity non-uniformity correction, prior to performing segmentation (default: %(default)s)"
    choices: 
      - gaussian
      - n4
    default: n4


  
  --seg_method:
    help: "Method to use for microscopy segmentation (e.g. plaques, protein deposits, cells) applied to 'stains_for_seg' channels, and used to calculate field fractions. "
    choices: 
      - threshold
      - otsu+k3i2
    default: 
      - otsu+k3i2
    nargs: '+'

  --seg_hist_range:
    help: "Range of intensities to use for histogram calculation in multiotsu segmentation. Only applicable when seg_method is otsu+k{}i{}. Specify 2 numbers, for min and max values. (default: %(default)s)"
    default: 
      - 0
      - 1000
    nargs: 2

  --seg_hist_bins:
    help: "Number of bins to use for histogram calculation in multiotsu segmentation. Only applicable when seg_method is otsu+k{}i{}. (default: %(default)s)"
    default: 1000

  --seg_threshold:
    help: "Threshold to use, only applicable when seg_method is 'threshold'."
    default: 75


  --register_to_mri:
    help: "Register the lightsheet data directly to a corresponding MRI (from the BIDS dataset)"
    action: store_true
    default: False

  --orientation:
    help: "Forcefully set the orientation of the input OME Zarr. Only use this if the orientation in the zarr metadata is incorrect and not easily changed. Note, this orientation string is defined in XYZ, with the letter of the increasing direction. Blaze data stitched with SPIMprep should be RPI, Imaris stitched data should be RAI, and Lifecanvas stitched data should be RAS. "
    default: null
    

  --sloppy:
    help: "Use low-quality parameters for speed (USE FOR TESTING ONLY)"
    action: store_true
    default: False


  --skip-bids-validation:
    help: |
      Skip validation of BIDS dataset. BIDS validation is performed by
      default using the bids-validator plugin (if installed/enabled) or with the pybids
      validator implementation (if bids-validator is not installed/enabled).
    dest: "plugins.validator.skip"
    action: "store_true"
    default: False

#--- workflow specific configuration -- 


ome_zarr:
  max_downsampling_layers: 4 # e.g. 4 levels: { 0: orig, 1: ds2, 2: ds4, 3: ds8, 4: ds16}
  rechunk_size: #z, y, x
    - 1 
    - 1024
    - 1024
  scaling_method: 'local_mean' #can be nearest, gaussian, local_mean, zoom (zoom uses spline interp)

# TODO: replace single "anat" template with suffix-labelled ones, or ultimately use bids naming and include just the entities here
templates:
  ABAv3:
    anat: 'tpl-ABAv3/tpl-ABAv3_anat.nii.gz'
    mask: 'tpl-ABAv3/tpl-ABAv3_desc-brain_mask.nii.gz'
    atlases:
      all: 
        dseg: 'tpl-ABAv3/tpl-ABAv3_seg-all_dseg.nii.gz'
        tsv: 'tpl-ABAv3/tpl-ABAv3_seg-all_dseg.tsv'
      roi22:
        dseg: 'tpl-ABAv3/tpl-ABAv3_seg-roi22_dseg.nii.gz'
        tsv: 'tpl-ABAv3/tpl-ABAv3_seg-roi22_dseg.tsv'
      roi82:
        dseg: 'tpl-ABAv3/tpl-ABAv3_seg-roi82_dseg.nii.gz'
        tsv: 'tpl-ABAv3/tpl-ABAv3_seg-roi82_dseg.tsv'
      roi198:
        dseg: 'tpl-ABAv3/tpl-ABAv3_seg-roi198_dseg.nii.gz'
        tsv: 'tpl-ABAv3/tpl-ABAv3_seg-roi198_dseg.tsv'
  MouseIn:
    # MP2RAGE inv1 chosen since its most similar to the MT GRE I had on hand.. better to create a 
    # new template later..
    anat: 'tpl-MouseIn/tpl-MouseIn_res-1_inv-1_MP2RAGE.nii.gz'
    mask: 'tpl-MouseIn/tpl-MouseIn_res-1_desc-brain_mask.nii.gz'

  MBMv3:
    anat: 'tpl-MBMv3/tpl-MBMv3_T2w.nii.gz'
    mask: 'tpl-MBMv3/tpl-MBMv3_desc-brain_mask.nii.gz'
    atlases:
      paxinos: 
        dseg: 'tpl-MBMv3/tpl-MBMv3_seg-paxinos_dseg.nii.gz'
        tsv: 'tpl-MBMv3/tpl-MBMv3_seg-paxinos_dseg.tsv'

  turone:
    anat: 'tpl-turone/tpl-turone_T2w.nii.gz'
    atlases:
      all:
        dseg: 'tpl-turone/tpl-turone_seg-all_dseg.nii.gz'
        tsv: 'tpl-turone/tpl-turone_seg-all_dseg.tsv'

  DSURQE:
    anat: https://www.mouseimaging.ca/repo/DSURQE_40micron/Dorr_2008_Steadman_2013_Ullmann_2013_Richards_2011_Qiu_2016_Egan_2015_40micron/nifti/DSURQE_40micron_average.nii
    mask: https://www.mouseimaging.ca/repo/DSURQE_40micron/Dorr_2008_Steadman_2013_Ullmann_2013_Richards_2011_Qiu_2016_Egan_2015_40micron/nifti/DSURQE_40micron_mask.nii
    atlases:
      all: 
        dseg: https://www.mouseimaging.ca/repo/DSURQE_40micron/Dorr_2008_Steadman_2013_Ullmann_2013_Richards_2011_Qiu_2016_Egan_2015_40micron/nifti/DSURQE_40micron_labels.nii
        custom_csv: https://www.mouseimaging.ca/repo/DSURQE_40micron/Dorr_2008_Steadman_2013_Ullmann_2013_Richards_2011_Qiu_2016_Egan_2015_40micron/mappings/DSURQE_40micron_R_mapping.csv
        tsv: tpl-DSURQE/seg-all_tpl-DSURQE_dseg.tsv


  
templatereg:
  desc: N4brain
  zooms:
    - 40

masking:
  gmm_k: 9
  gmm_bg_class: 1
  pre_atropos_downsampling: '50%'

blobdetect:
  level: 5 #downsampling level to use for blob detection
  dseg_level: 5 # downsampling level to use for template when assigning labels to blobs
  dseg_template: ABAv3


