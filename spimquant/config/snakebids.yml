bids_dir: '/cifs/prado/Kate/AK_Pipeline_LSM/spimprep/bids/'
output_dir: '.'


#list of analysis levels in the bids app
analysis_levels: &analysis_levels
 - participant


#mapping from analysis_level to set of target rules or files
targets_by_analysis_level:
  participant:
    - ''  # if '', then the first rule is run

# Configure components:
# Each entry creates a new component that can be retreived within the workflow
# via `generate_inputs`.
# Filters are used to select paths: each filter has an `entity` key and a
# single value or list of values to select.
# Wildcards are used to mark variable parts of paths. Each wildcard is an
# entity, such as `subject` or `session`, that may vary across component paths.
pybids_inputs:
  spim:
    filters:
      suffix: 'SPIM'
      #      acquisition: 4x #this will need to be blaze4x
      extension: 'ome.zarr'
    wildcards:
      - subject
      - sample
      - acquisition
      - staining


#configuration for the command-line parameters to make available
# passed on the argparse add_argument()
parse_args:
  --skip-bids-validation:
    help: |
      Skip validation of BIDS dataset. BIDS validation is performed by
      default using the bids-validator plugin (if installed/enabled) or with the pybids
      validator implementation (if bids-validator is not installed/enabled).
    dest: "plugins.validator.skip"
    action: "store_true"
    default: False



#--- workflow specific configuration -- 


containers:
  spimprep: 'docker://khanlab/spimprep-deps:main'
  ants: 'docker://kaczmarj/ants:2.3.4'
  itksnap: 'docker://khanlab/itksnap:latest' 

root: 'results'
work: 'work'


ome_zarr:
  max_downsampling_layers: 4 # e.g. 4 levels: { 0: orig, 1: ds2, 2: ds4, 3: ds8, 4: ds16}
  rechunk_size: #z, y, x
    - 1 
    - 1024
    - 1024
  scaling_method: 'local_mean' #can be nearest, gaussian, local_mean, zoom (zoom uses spline interp)


template: ABAv3 #template to use

templates:
  ABAv3:
    anat: '{workflow.basedir}/../resources/ABAv3/P56_Atlas.nii.gz'
    dseg: '{workflow.basedir}/../resources/ABAv3/P56_Annotation.nii.gz'
    lut: '{workflow.basedir}/../resources/ABAv3/labelmapper_ABAv3_to_all.json'
  gubra:
    anat: '{workflow.basedir}/../resources/gubra/gubra_template_olf_affine_padABAv3.nii.gz'
    dseg: '{workflow.basedir}/../resources/gubra/gubra_ano_olf_affine_padABAv3_remap.nii.gz'
    lut: '{workflow.basedir}/../resources/ABAv3/labelmapper_ABAv3_to_all.json'

stains:
  - PI
  - BetaAmyloid

templatereg:
  stain: PI #set this to PI for lifecanvas data 
  level: 5
  desc: N4brain
  zooms:
    #    - 20
    - 40

masking:
  stain: PI #set this to PI for lifecanvas data 
  level: 5
  priors_template: ABAv3
  gmm_k: 9
  gmm_bg_class: 1
  pre_atropos_downsampling: '50%'

blobdetect:
  level: 1 #downsampling level to use for blob detection
  dseg_level: 5 # downsampling level to use for template when assigning labels to blobs
  dseg_template: ABAv3
  stain: BetaAmyloid

use_coiled: False
use_tiny: True
