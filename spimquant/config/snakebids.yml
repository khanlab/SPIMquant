#bids_dir: 'gcs://khanlab-lightsheet/data/mouse_appmaptapoe/bids'
#bids_dir: 'gcs://khanlab-lightsheet/data/mouse_appmaptapoe/bids_oldBlaze'
#output_dir: '.'

#root: '/cifs/trident/projects/mouse_appmaptapoe/lightsheet/derivatives/SPIMquant/v0.1.1-alpha' 
#work: '/cifs/trident/.work'
#root: 'results'
#work: 'work'

#root_coiled: 'gcs://khanlab-lightsheet/data/mouse_appmaptapoe/bids/derivatives/SPIMquant_v0.1.1-alpha'
#work_coiled: 'gcs://khanlab-scratch/spimquant_work'

#list of analysis levels in the bids app
analysis_levels: &analysis_levels
 - participant


#mapping from analysis_level to set of target rules or files
targets_by_analysis_level:
  participant:
    - ''  # if '', then the first rule is run

# Configure components:
# Each entry creates a new component that can be retreived within the workflow
# via `generate_inputs`.
# Filters are used to select paths: each filter has an `entity` key and a
# single value or list of values to select.
# Wildcards are used to mark variable parts of paths. Each wildcard is an
# entity, such as `subject` or `session`, that may vary across component paths.
pybids_inputs:
  spim:
    filters:
      suffix: 'SPIM'
      extension: 'ome.zarr'
      sample: brain
    wildcards:
      - subject
      - sample
      - acquisition
      - staining
  T2w:
    filters:
      suffix: 'T2w'
      extension: 'nii.gz'
      datatype: 'anat'
    wildcards:
      - subject
      - session
      - acquisition


#configuration for the command-line parameters to make available
# passed on the argparse add_argument()
parse_args:
  bids_dir_or_uri:
    help: |
      Local path or a remote cloud uri (e.g. gcs:// ) for BIDS dataset
    type: str

  --work:
    help: "Local path to use for temporary files\n"
    type: str
    default: work

  --use_coiled:
    help: "Use coiled for remote cloud execution (use this only if your input data is already on cloud) (default: %(default)s)"
    action: "store_true"
    default: False

  --root_coiled:
    help: "Remote uri to use for finalized cloud outputs from coiled rules, only applicable with --use-coiled\n"
    type: str
    default: 
      gcs://khanlab-lightsheet/data/mouse_appmaptapoe/bids/derivatives/SPIMquant_v0.1.1-alpha

  --work_coiled:
    help: "Remote uri to use for temporary cloud outputs from coiled rules, only applicable with --use-coiled\n"
    type: str
    default: gcs://khanlab-scratch/spimquant_work
  
  --template:
    help: "Template to use for SPIM registration\n"
    default: ABAv3
    choices: 
     - ABAv3
     - gubra
     - MBMv3
     - turone

  --template_mri:
    help: "Template to use for MRI registration to obtain brain mask\n"
    default: MouseIn
    choices:
      - MouseIn

  --template_negative_mask:
    help: "Negative mask, in the template space, to highlight regions to avoid\n"
    type: Path
    default: /cifs/trident/projects/mouse_appmaptapoe/lightsheet/derivatives/SPIMquant/v0.1.1-alpha/analysis_appmaptapoe_20241111/etc/negative_mask.nii


  --stains_for_reg:
    help: "Possible stains to use for registration (will choose first available, in order)\n (default: %(default)s)"
    default: 
      - PI
      - YOPRO
      - AutoF
      - autof
    action: store
    nargs: '+'

  --stains_for_seg:
    help: "List of stains to use for segmentation and quantification\n (default: %(default)s)"
    default: 
      - abeta
      - Abeta
      - BetaAmyloid
      - AlphaSynuclein
    action: store
    nargs: '+'

  --registration_level:
    help: "Downsampling level to use for registration (level 0 is full res, level 1 is 50% size, ...) (default: %(default)s)"
    default: 5

  --segmentation_level:
    help: "Downsampling level to use for segmentation (level 0 is full res, level 1 is 50% size, ...) (default: %(default)s)"
    default: 0


  --in_orientation:
    help: "Override input SPIM image orientation, using 3-letter orientation code representing ZYX directions, with R/L, A/P, S/I (default: %(default)s)"
    default: IPL
    
  --use_negative_mask:
    help: "Use the template-based negative mask to reduce boundary artifact when quantifying"
    action: store_true
    default: False    

  --register_to_mri:
    help: "Register the lightsheet data directly to a corresponding MRI (from the BIDS dataset)"
    action: store_true
    default: False

  --remote_creds:
    help: "Google cloud default credentials to use for coiled"
    default: ~/.config/gcloud/application_default_credentials.json

  --skip-bids-validation:
    help: |
      Skip validation of BIDS dataset. BIDS validation is performed by
      default using the bids-validator plugin (if installed/enabled) or with the pybids
      validator implementation (if bids-validator is not installed/enabled).
    dest: "plugins.validator.skip"
    action: "store_true"
    default: False

#--- workflow specific configuration -- 

containers:
  spimprep: 'docker://khanlab/spimprep-deps:main'
  ants: 'docker://kaczmarj/ants:2.3.4'
  itksnap: 'docker://khanlab/itksnap:latest' 

remote_creds: '~/.config/gcloud/application_default_credentials.json' #this is needed so we can pass creds to container

ome_zarr:
  max_downsampling_layers: 4 # e.g. 4 levels: { 0: orig, 1: ds2, 2: ds4, 3: ds8, 4: ds16}
  rechunk_size: #z, y, x
    - 1 
    - 1024
    - 1024
  scaling_method: 'local_mean' #can be nearest, gaussian, local_mean, zoom (zoom uses spline interp)


#template:  ABAv3 #template to use

#template_negative_mask: /cifs/trident/projects/mouse_appmaptapoe/lightsheet/derivatives/SPIMquant/v0.1.1-alpha/analysis_appmaptapoe_20241111/etc/negative_mask.nii


templates:
  MouseIn:
    # MP2RAGE inv1 chosen since its most similar to the MT GRE I had on hand.. better to create a 
    # new template later..
    anat: '{workflow.basedir}/../resources/tpl-MouseIn/tpl-MouseIn_res-1_inv-1_MP2RAGE.nii.gz'
    mask: '{workflow.basedir}/../resources/tpl-MouseIn/tpl-MouseIn_res-1_desc-brain_mask.nii.gz'

  ABAv3:
    anat: '{workflow.basedir}/../resources/ABAv3/P56_Atlas.nii.gz'
    dseg: '{workflow.basedir}/../resources/ABAv3/P56_Annotation.nii.gz'
    lut: '{workflow.basedir}/../resources/ABAv3/labelmapper_ABAv3_to_all.json'
    segs:
      all: 
        dseg: 'tpl-ABAv3/tpl-ABAv3_desc-LR_dseg.nii.gz'
        tsv: 'tpl-ABAv3/tpl-ABAv3_desc-LR_dseg.tsv'
      roi22: 
        dseg: '{workflow.basedir}/../resources/ABAv3/eed_labels/P56_annotation_22_R_L.nii.gz'
        csv: '{workflow.basedir}/../resources/ABAv3/eed_labels/P56_annotation_22_R_L.csv'
      roi82:
        dseg: '{workflow.basedir}/../resources/ABAv3/eed_labels/P56_annotation_82_R_L.nii.gz'
        csv: '{workflow.basedir}/../resources/ABAv3/eed_labels/P56_annotation_82_R_L.csv'
      roi198:
        dseg: '{workflow.basedir}/../resources/ABAv3/ngo_labels/atlas.nii.gz'
        csv: '{workflow.basedir}/../resources/ABAv3/ngo_labels/atlas_with_names.csv'

        
  gubra:
    anat: '{workflow.basedir}/../resources/gubra/gubra_template_olf_spacing_reslice.nii.gz'
    dseg: '{workflow.basedir}/../resources/gubra/gubra_ano_olf_spacing_remap_reslice.nii.gz'
    lut: '{workflow.basedir}/../resources/ABAv3/labelmapper_ABAv3_to_all.json'
    segs:
      all: 
        dseg: 'tpl-gubra/tpl-gubra_desc-LR_dseg.nii.gz'
        tsv: 'tpl-gubra/tpl-gubra_desc-LR_dseg.tsv'

  MBMv3:
    anat: '{workflow.basedir}/../resources/MBMv3/template_T2w_brain.nii.gz'
    dseg: '{workflow.basedir}/../resources/MBMv3/segmentation_three_types_seg.nii.gz' #this is used for brainmasking
    segs:
      paxinos: 
        dseg: '{workflow.basedir}/../resources/MBMv3/atlas_MBM_cortex_vPaxinos.nii.gz'
        tsv: '{workflow.basedir}/../resources/MBMv3/atlas_MBM_cortex_vPaxinos.txt'

  turone:
    anat: '{workflow.basedir}/../resources/Turone_Mouse_Brain_Template/Turone_Mouse_Brain_Template/TMBTA_Brain_Template.nii.gz'
    dseg: '{workflow.basedir}/../resources/Turone_Mouse_Brain_Template/Turone_Mouse_Brain_Template/TMBTA_tissue_dseg.nii.gz'
    segs:
      all:
        dseg: '{workflow.basedir}/../resources/Turone_Mouse_Brain_Template/Turone_Mouse_Brain_Atlas/TMBTA_Brain_Atlas.nii.gz'
        itksnap: '{workflow.basedir}/../resources/Turone_Mouse_Brain_Template/Turone_Mouse_Brain_Atlas/TMBTA_ItK_Label_File.txt'



stains_for_reg: #ordered by priority
  - PI
  - YOPRO
  - autof
  - AutoF

stains_for_seg:
  - abeta
  - Abeta
  - BetaAmyloid
  - AlphaSynuclein

in_orientation: IPL #set to 3-letter orientation string, e.g. RPI. 
  
templatereg:
  desc: N4brain
  zooms:
    #    - 20
    - 40

masking:
  gmm_k: 9
  gmm_bg_class: 1
  pre_atropos_downsampling: '50%'

blobdetect:
  level: 5 #downsampling level to use for blob detection
  dseg_level: 5 # downsampling level to use for template when assigning labels to blobs
  dseg_template: ABAv3

segmentation_level: 0
registration_level: 5

#-- for local dryrun testing with snakemake -np
root: ''
work: 'work'
root_coiled: 'gcs://test'
work_coiled: 'gcs://temp'
bids_dir_or_uri: '../tests/data'
template: ABAv3
template_negative_mask: /cifs/trident/projects/mouse_appmaptapoe/lightsheet/derivatives/SPIMquant/v0.1.1-alpha/analysis_appmaptapoe_20241111/etc/negative_mask.nii
template_mri: MouseIn
use_negative_mask: false
use_coiled: false
